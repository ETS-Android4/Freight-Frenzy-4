import androidx.core.math.MathUtils;
import com.qualcomm.robotcore.util.Range;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;

@com.qualcomm.robotcore.eventloop.opmode.TeleOp(name="Mechanaum Teleop", group="Teleop")

public class MechanumTeleop extends LinearOpMode {

    MechanumHardware robot = new MechanumHardware();


    @Override
    public void runOpMode() {
        int stick_direction;
        double ly;
        double rx;
        double lx;
        boolean slow_mode;
        boolean normal_mode;

        robot.teleopInit(hardwareMap);

        // Send telemetry message to signify robot waiting;
        telemetry.addData("Say", "Hello Driver");
        telemetry.update();

        // Wait for the game to start (driver presses PLAY)
        waitForStart();

        // run until the end of the match (driver presses STOP)
        while (opModeIsActive()) {
//  Duck attachment code, WIP
//
//            if (gamepad2.a)
//                robot.duckSpinner.setPower(1);
//            else robot.duckSpinner.setPower(0);
//
//            if (gamepad2.dpad_right)
//                robot.duckArm.setPosition(robot.DUCK_ARM_OUT);
//
//            if (gamepad2.dpad_left)
//                robot.duckArm.setPosition(robot.DUCK_ARM_IN);

            // Drivetrain
            ly = -gamepad1.left_stick_y; //drive forward
            lx = gamepad1.left_stick_x; //strafe
            //todo above was negative, changed to fix
            rx = -gamepad1.right_stick_x; //turn

            if (Math.abs(ly) > robot.TELEOPDEADZONE ||
                    Math.abs(lx) > robot.TELEOPDEADZONE ||
                    Math.abs(rx) > robot.TELEOPDEADZONE) {

                normal_mode = true;
                slow_mode = false;
                // Compute the drive speed of each drive motor based on formula from redit
                double FL_power_raw = ly + lx - (rx * .7f);
                double FR_power_raw = ly - lx + (rx * .7f);
                double RL_power_raw = ly - lx - (rx * .7f);
                double RR_power_raw = ly + lx + (rx * .7f);

                //Clip the values generated by the above formula so that they never go outisde of -1 to 1
                double FL_power = Range.clip(FL_power_raw, -1, 1);
                double FR_power = Range.clip(FR_power_raw, -1, 1);
                double RL_power = Range.clip(RL_power_raw, -1, 1);
                double RR_power = Range.clip(RR_power_raw, -1, 1);

                robot.leftFrontDrive.setPower(FL_power);
                robot.rightFrontDrive.setPower(FR_power);
                robot.leftRearDrive.setPower(RL_power);
                robot.rightRearDrive.setPower(RR_power);
                
                // Attachments
            }
        }
    }
}